# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2016, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-06-10 11:27+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../Doc/library/platform.rst:2
msgid ":mod:`platform` ---  Access to underlying platform's identifying data"
msgstr ":mod:`platform` — Accès aux données sous-jacentes de la plateforme"

#: ../Doc/library/platform.rst:10
msgid "**Source code:** :source:`Lib/platform.py`"
msgstr "**Code source :** :source:`Lib/platform.py`"

#: ../Doc/library/platform.rst:16
msgid ""
"Specific platforms listed alphabetically, with Linux included in the Unix "
"section."
msgstr ""
"Les spécificités des plateformes sont regroupées dans des sections triées "
"par ordre alphabétique. Linux est inclus dans la section Unix."

#: ../Doc/library/platform.rst:21
msgid "Cross Platform"
msgstr "Multi-plateforme"

#: ../Doc/library/platform.rst:26
msgid ""
"Queries the given executable (defaults to the Python interpreter binary) for "
"various architecture information."
msgstr ""
"Interroge l'exécutable fourni (par défaut l'interpréteur Python) sur les "
"informations de l'architecture."

#: ../Doc/library/platform.rst:29
msgid ""
"Returns a tuple ``(bits, linkage)`` which contain information about the bit "
"architecture and the linkage format used for the executable. Both values are "
"returned as strings."
msgstr ""
"Renvoie un *n*-uplet de ``(bits, linkage)`` qui contient de l'information "
"sur l'architecture binaire et le format de lien. Les deux valeurs sont des "
"chaînes de caractères."

#: ../Doc/library/platform.rst:33
msgid ""
"Values that cannot be determined are returned as given by the parameter "
"presets. If bits is given as ``''``, the ``sizeof(pointer)`` (or "
"``sizeof(long)`` on Python version < 1.5.2) is used as indicator for the "
"supported pointer size."
msgstr ""
"Lorsqu'une valeur ne peut être déterminée, la valeur passée en paramètre est "
"utilisée. Si la valeur passée à *bits* est ``''``, la valeur de "
"``sizeof(pointer)`` (ou ``sizeof(long)`` sur les versions Python antérieures "
"à 1.5.2) est utilisée comme indicateur de la taille de pointeur prise en "
"charge."

#: ../Doc/library/platform.rst:38
msgid ""
"The function relies on the system's :file:`file` command to do the actual "
"work. This is available on most if not all Unix  platforms and some non-Unix "
"platforms and then only if the executable points to the Python interpreter.  "
"Reasonable defaults are used when the above needs are not met."
msgstr ""
"La fonction dépend de la commande :file:`file` du système pour accomplir la "
"tâche. `file` est disponible sur quasiment toutes les plateformes Unix ainsi "
"que sur certaines plateformes hors de la famille Unix et l'exécutable doit "
"pointer vers l'interpréteur Python. Des valeurs par défaut raisonnables sont "
"utilisées lorsque les conditions précédentes ne sont pas atteintes."

#: ../Doc/library/platform.rst:45
msgid ""
"On Mac OS X (and perhaps other platforms), executable files may be universal "
"files containing multiple architectures."
msgstr ""
"Sur Mac OS X (ainsi que d'autres plateformes), les fichiers exécutables "
"peuvent être universels et contenir plusieurs architectures."

#: ../Doc/library/platform.rst:48
msgid ""
"To get at the \"64-bitness\" of the current interpreter, it is more reliable "
"to query the :attr:`sys.maxsize` attribute::"
msgstr ""
"Afin de déterminer si l'interpréteur courant est 64-bit, une méthode plus "
"fiable est d'interroger l'attribut :attr:`sys.maxsize` ::"

#: ../Doc/library/platform.rst:56
msgid ""
"Returns the machine type, e.g. ``'i386'``. An empty string is returned if "
"the value cannot be determined."
msgstr ""
"Renvoie le type de machine. Par exemple, ``'i386'``. Une chaîne de "
"caractères vide est renvoyée si la valeur ne peut être déterminée."

#: ../Doc/library/platform.rst:62
msgid ""
"Returns the computer's network name (may not be fully qualified!). An empty "
"string is returned if the value cannot be determined."
msgstr ""
"Renvoie le nom de l'ordinateur sur le réseau (pas forcément pleinement "
"qualifié). Une chaîne de caractères vide est renvoyée s'il ne peut pas être "
"déterminé."

#: ../Doc/library/platform.rst:68
msgid ""
"Returns a single string identifying the underlying platform with as much "
"useful information as possible."
msgstr ""
"Renvoie une chaîne de caractère identifiant la plateforme avec le plus "
"d'informations possible."

#: ../Doc/library/platform.rst:71
msgid ""
"The output is intended to be *human readable* rather than machine parseable. "
"It may look different on different platforms and this is intended."
msgstr ""
"La valeur renvoyée est destinée à la *lecture humaine* plutôt que "
"l'interprétation machine. Il est possible qu'elle soit différente selon la "
"plateforme et c'est voulu."

#: ../Doc/library/platform.rst:74
msgid ""
"If *aliased* is true, the function will use aliases for various platforms "
"that report system names which differ from their common names, for example "
"SunOS will be reported as Solaris.  The :func:`system_alias` function is "
"used to implement this."
msgstr ""
"Si *aliased* est vrai, la fonction utilisera des alias pour certaines "
"plateformes qui utilisent des noms de système qui diffèrent de leurs noms "
"communs. Par exemple, SunOS sera reconnu comme Solaris. La fonction :func:"
"`system_alias` est utilisée pour l'implémentation."

#: ../Doc/library/platform.rst:79
msgid ""
"Setting *terse* to true causes the function to return only the absolute "
"minimum information needed to identify the platform."
msgstr ""
"Si *terse* est vrai, la fonction ne renverra que l'information nécessaire à "
"l'identification de la plateforme."

#: ../Doc/library/platform.rst:85
msgid "Returns the (real) processor name, e.g. ``'amdk6'``."
msgstr "Renvoie le (vrai) nom du processeur. Par exemple : ``'amdk6'``."

#: ../Doc/library/platform.rst:87
msgid ""
"An empty string is returned if the value cannot be determined. Note that "
"many platforms do not provide this information or simply return the same "
"value as for :func:`machine`.  NetBSD does this."
msgstr ""
"Une chaîne de caractères vide est renvoyée si la valeur ne peut être "
"déterminée. Prenez note que plusieurs plateformes ne fournissent pas cette "
"information ou renvoient la même valeur que la fonction :func:`machine`. "
"NetBSD agit ainsi."

#: ../Doc/library/platform.rst:94
msgid ""
"Returns a tuple ``(buildno, builddate)`` stating the Python build number and "
"date as strings."
msgstr ""
"Renvoie une paire ``(buildno, builddate)`` de chaîne de caractères "
"identifiant la version et la date de compilation de Python."

#: ../Doc/library/platform.rst:100
msgid "Returns a string identifying the compiler used for compiling Python."
msgstr ""
"Renvoie une chaîne de caractères identifiant le compilateur utilisé pour "
"compiler Python."

#: ../Doc/library/platform.rst:105
msgid "Returns a string identifying the Python implementation SCM branch."
msgstr ""
"Renvoie la chaîne de caractères identifiant la branche du gestionnaire de "
"versions de l'implémentation Python."

#: ../Doc/library/platform.rst:110
msgid ""
"Returns a string identifying the Python implementation. Possible return "
"values are: 'CPython', 'IronPython', 'Jython', 'PyPy'."
msgstr ""
"Renvoie une chaîne de caractères identifiant l'implémentation de Python. Des "
"valeurs possibles sont : ``CPython``, ``IronPython``, ``Jython``, ``Pypy``."

#: ../Doc/library/platform.rst:116
msgid "Returns a string identifying the Python implementation SCM revision."
msgstr ""
"Renvoie la chaîne de caractères identifiant la révision du gestionnaire de "
"versions de l'implémentation Python."

#: ../Doc/library/platform.rst:121
msgid "Returns the Python version as string ``'major.minor.patchlevel'``."
msgstr ""
"Renvoie la version de Python comme une chaîne de caractères ``'major.minor."
"patchlevel'``."

#: ../Doc/library/platform.rst:123
msgid ""
"Note that unlike the Python ``sys.version``, the returned value will always "
"include the patchlevel (it defaults to 0)."
msgstr ""
"Prenez note que la valeur renvoyée inclut toujours le *patchlevel* (valeur "
"par défaut de 0) à la différence de ``sys.version``."

#: ../Doc/library/platform.rst:129
msgid ""
"Returns the Python version as tuple ``(major, minor, patchlevel)`` of "
"strings."
msgstr ""
"Renvoie la version de Python comme un triplet de chaînes de caractères "
"``(major, minor, patchlevel)``."

#: ../Doc/library/platform.rst:131
msgid ""
"Note that unlike the Python ``sys.version``, the returned value will always "
"include the patchlevel (it defaults to ``'0'``)."
msgstr ""
"Prenez note que la valeur renvoyée inclut toujours le *patchlevel* (valeur "
"par défaut de ``'0'``) à la différence de ``sys.version``."

#: ../Doc/library/platform.rst:137
msgid ""
"Returns the system's release, e.g. ``'2.2.0'`` or ``'NT'`` An empty string "
"is returned if the value cannot be determined."
msgstr ""
"Renvoie la version de déploiement du système, par exemple, ``'2.2.0'`` ou "
"``'NT'``. Une chaîne de caractères vide signifie qu'aucune valeur ne peut "
"être déterminée."

#: ../Doc/library/platform.rst:143
msgid ""
"Returns the system/OS name, e.g. ``'Linux'``, ``'Windows'``, or ``'Java'``. "
"An empty string is returned if the value cannot be determined."
msgstr ""

#: ../Doc/library/platform.rst:149
msgid ""
"Returns ``(system, release, version)`` aliased to common marketing names "
"used for some systems.  It also does some reordering of the information in "
"some cases where it would otherwise cause confusion."
msgstr ""
"Renvoie ``(system, release, version)`` avec des alias pour les noms communs "
"de certains systèmes. Modifie aussi l'ordre de l'information pour éviter la "
"confusion."

#: ../Doc/library/platform.rst:156
msgid ""
"Returns the system's release version, e.g. ``'#3 on degas'``. An empty "
"string is returned if the value cannot be determined."
msgstr ""
"Renvoie la version de déploiement du système. Par exemple, ``'#3 on "
"degas'``. Une chaîne de caractères vide est renvoyée si aucune valeur ne "
"peut être déterminée."

#: ../Doc/library/platform.rst:162
msgid ""
"Fairly portable uname interface. Returns a :func:`~collections.namedtuple` "
"containing six attributes: :attr:`system`, :attr:`node`, :attr:`release`, :"
"attr:`version`, :attr:`machine`, and :attr:`processor`."
msgstr ""
"Interface de *uname* relativement portable. Renvoie un :func:`~collections."
"namedtuple` contenant six attributs : :attr:`system`, :attr:`node`, :attr:"
"`release`, :attr:`version`, :attr:`machine` et :attr:`processor`."

#: ../Doc/library/platform.rst:166
msgid ""
"Note that this adds a sixth attribute (:attr:`processor`) not present in "
"the :func:`os.uname` result.  Also, the attribute names are different for "
"the first two attributes; :func:`os.uname` names them :attr:`sysname` and :"
"attr:`nodename`."
msgstr ""
"Prenez note qu'il y a un attribut supplémentaire (:attr:`processor`) par "
"rapport à la valeur de retour de :func:`os.uname`. De plus, les deux "
"premiers attributs changent de nom ; ils s'appellent :attr:`sysname` et :"
"attr:`nodename` pour la fonction :func:`os.uname`."

#: ../Doc/library/platform.rst:171
msgid "Entries which cannot be determined are set to ``''``."
msgstr "Les entrées qui ne peuvent pas être identifiées ont la valeur ``''``."

#: ../Doc/library/platform.rst:173
msgid "Result changed from a tuple to a namedtuple."
msgstr "Le type renvoyé passe d'un *tuple* à un *namedtuple*."

#: ../Doc/library/platform.rst:178
msgid "Java Platform"
msgstr "Plateforme Java"

#: ../Doc/library/platform.rst:183
msgid "Version interface for Jython."
msgstr "Version de l'interface pour Jython."

#: ../Doc/library/platform.rst:185
msgid ""
"Returns a tuple ``(release, vendor, vminfo, osinfo)`` with *vminfo* being a "
"tuple ``(vm_name, vm_release, vm_vendor)`` and *osinfo* being a tuple "
"``(os_name, os_version, os_arch)``. Values which cannot be determined are "
"set to the defaults given as parameters (which all default to ``''``)."
msgstr ""
"Renvoie un *n*-uplet ``(release, vendor, vminfo, osinfo)``. *vminfo* est un "
"triplet de valeur ``(vm_name, vm_release, vm_vendor)`` et *osinfo* est un "
"triplet de valeur ``(os_name, os_version, os_arch)``. Les valeurs "
"indéterminables ont la valeur des paramètres par défaut (valeur de ``''`` "
"par défaut)."

#: ../Doc/library/platform.rst:192
msgid "Windows Platform"
msgstr "Plateforme Windows"

#: ../Doc/library/platform.rst:197
msgid ""
"Get additional version information from the Windows Registry and return a "
"tuple ``(release, version, csd, ptype)`` referring to OS release, version "
"number, CSD level (service pack) and OS type (multi/single processor)."
msgstr ""
"Interroge le registre Windows pour de l'information supplémentaire et "
"renvoie un triplet de ``(release, version, csd, ptype)`` faisant référence "
"au  numéro de version du SE, le numéro de version, le niveau de CSD (Service "
"Pack) et le type de SE (monoprocesseur ou multiprocesseur)."

#: ../Doc/library/platform.rst:201
msgid ""
"As a hint: *ptype* is ``'Uniprocessor Free'`` on single processor NT "
"machines and ``'Multiprocessor Free'`` on multi processor machines. The "
"*'Free'* refers to the OS version being free of debugging code. It could "
"also state *'Checked'* which means the OS version uses debugging code, i.e. "
"code that checks arguments, ranges, etc."
msgstr ""
"Astuce : *ptype* est ``'Uniprocessor Free'`` sur des machines NT ayant qu'un "
"seul processeur et ``'Multiprocessor Free'`` sur des machines ayant "
"plusieurs processeurs. La composante *'Free'* fait référence à l'absence de "
"code de débogage dans le SE. Au contraire, *'Checked'* indique que le SE "
"utilise du code de débogage pour valider les paramètres, etc."

#: ../Doc/library/platform.rst:209
msgid ""
"This function works best with Mark Hammond's :mod:`win32all` package "
"installed, but also on Python 2.3 and later (support for this was added in "
"Python 2.6). It obviously only runs on Win32 compatible platforms."
msgstr ""

#: ../Doc/library/platform.rst:216
msgid "Win95/98 specific"
msgstr ""

#: ../Doc/library/platform.rst:220
msgid ""
"Portable :func:`popen` interface.  Find a working popen implementation "
"preferring :func:`win32pipe.popen`.  On Windows NT, :func:`win32pipe.popen` "
"should work; on Windows 9x it hangs due to bugs in the MS C library."
msgstr ""

#: ../Doc/library/platform.rst:224
msgid ""
"This function is obsolete.  Use the :mod:`subprocess` module.  Check "
"especially the :ref:`subprocess-replacements` section."
msgstr ""

#: ../Doc/library/platform.rst:230
msgid "Mac OS Platform"
msgstr "Plateforme Mac OS"

#: ../Doc/library/platform.rst:235
msgid ""
"Get Mac OS version information and return it as tuple ``(release, "
"versioninfo, machine)`` with *versioninfo* being a tuple ``(version, "
"dev_stage, non_release_version)``."
msgstr ""
"Renvoie les informations de version de Mac OS avec un triplet de ``(release, "
"versioninfo, machine)``. *versioninfo* est un triplet de ``(version, "
"dev_stage, non_release_version)``."

#: ../Doc/library/platform.rst:239
msgid ""
"Entries which cannot be determined are set to ``''``.  All tuple entries are "
"strings."
msgstr ""
"Les entrées qui ne peuvent pas être identifiées auront la valeur ``''``. Les "
"membres du *n*-uplet sont tous des chaînes de caractères."

#: ../Doc/library/platform.rst:244
msgid "Unix Platforms"
msgstr "Plateformes Unix"

#: ../Doc/library/platform.rst:249
msgid "This is another name for :func:`linux_distribution`."
msgstr ""

#: ../Doc/library/platform.rst:252 ../Doc/library/platform.rst:271
msgid ""
"See alternative like the `distro <https://pypi.org/project/distro>`_ package."
msgstr ""

#: ../Doc/library/platform.rst:256
msgid "Tries to determine the name of the Linux OS distribution name."
msgstr ""

#: ../Doc/library/platform.rst:258
msgid ""
"``supported_dists`` may be given to define the set of Linux distributions to "
"look for. It defaults to a list of currently supported Linux distributions "
"identified by their release file name."
msgstr ""

#: ../Doc/library/platform.rst:262
msgid ""
"If ``full_distribution_name`` is true (default), the full distribution read "
"from the OS is returned. Otherwise the short name taken from "
"``supported_dists`` is used."
msgstr ""

#: ../Doc/library/platform.rst:266
msgid ""
"Returns a tuple ``(distname,version,id)`` which defaults to the args given "
"as parameters.  ``id`` is the item in parentheses after the version number.  "
"It is usually the version codename."
msgstr ""

#: ../Doc/library/platform.rst:275
msgid ""
"Tries to determine the libc version against which the file executable "
"(defaults to the Python interpreter) is linked.  Returns a tuple of strings "
"``(lib, version)`` which default to the given parameters in case the lookup "
"fails."
msgstr ""
"Tente d'identifier la version de la bibliothèque standard C à laquelle le "
"fichier exécutable (par défaut l'interpréteur Python) est lié. Renvoie une "
"paire de chaînes de caractères ``(lib, version)``. Les valeurs passées en "
"paramètre seront retournées si la recherche échoue."

#: ../Doc/library/platform.rst:279
msgid ""
"Note that this function has intimate knowledge of how different libc "
"versions add symbols to the executable is probably only usable for "
"executables compiled using :program:`gcc`."
msgstr ""
"Prenez note que cette fonction a une connaissance profonde des méthodes "
"utilisées par les versions de la bibliothèque standard C pour ajouter des "
"symboles au fichier exécutable. Elle n'est probablement utilisable qu'avec "
"des exécutables compilés avec :program:`gcc`."

#: ../Doc/library/platform.rst:283
msgid "The file is read and scanned in chunks of *chunksize* bytes."
msgstr "Le fichier est lu en blocs de *chunksize* octets."
